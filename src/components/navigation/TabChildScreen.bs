'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Initialization
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function init()
  log_registerLogger("TabChildScreen")
  log_logMethod("init")
  m.top.navController = m.top.findNode("navController")
  initializeView(m.top.navController)
  m.isFirstScreenCreated = false
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Public API
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function reset(args = invalid)
  log_logMethod("reset")
  resetNavControllerToRoot()
  
  if m.top.navController.currentView <> invalid
    m.top.navController.currentView@.reset()
  end if

  if m.top.hasFocus()
    setFocus(m.top.navController)
  end if
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Private impl
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function createFirstScreen()
  log_logMethod("createFirstScreen")
  if m.top.content <> invalid
    if m.top.content <> invalid
      push(m.top.content)
      m.isFirstScreenCreated = true
    else
      log_logError("no screen ")
    end if
  else
    log_logError("content was invalid!")
  end if
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Key handling
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function onKeyPressBack() as boolean
  log_logMethod("onKeyPressBack")
  
  if m.top.navController.numberOfViews > 1
    pop()
    setFocus(m.top.navController)
    return true
  end if
  
  return false
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Lifecycle methods
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function onShow()
  log_logMethod("onShow")

  if m.isFirstScreenCreated
    reset()
  else
    createFirstScreen()
  end if
  m.top.navController.visible = true
end function

function onHide()
  log_logMethod("onHide")
  m.top.navController.visible = false
  reset()
end function

function onGainedFocus(isSelfFocused)
  ' log_logMethod("onGainedFocus ", isSelfFocused)
  if isSelfFocused
    setFocus(m.top.navController)
  end if
end function
