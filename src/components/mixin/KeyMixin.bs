'Note this file is intentionally _not_ namespaced


' /**
'  * @module KeyMixin
'  * @description Mixin method for helping with managing keypresses. Intended to be included in a base class, so that the super class can override the methods. Supports standard presses and long press gestures too.
'  */


function keyPressMixinInit()
  m.isKeyPressLocked = false
  m.longPressTimer = invalid
  m.longPressKey = ""
  m.isLongPressStarted = false
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ KEY HANDLING
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnKeyEvent(key as string, press as boolean) as boolean
  result = false
  if press
    if (isAnyKeyPressLocked())
      return true
    end if
    if key = "down"
      result = onKeyPressDown()
    else if key = "up"
      result = onKeyPressUp()
    else if key = "left"
      result = onKeyPressLeft()
    else if key = "right"
      result = onKeyPressRight()
    else if key = "OK"
      result = onKeyPressOK()
    else if key = "back"
      result = onKeyPressBack()
    else if key = "options"
      result = onKeyPressOption()
    else if key = "play"
      result = onKeyPressPlay()
    end if
  else if m.longPressKey <> ""
    toggleLongPressTimer(0)
    result = true
  end if

  if (result = invalid)
    result = false
  end if

  if result and press
    longPressInterval = getLongPressIntervalForKey(key)
    if longPressInterval > 0
      log_logInfo("entering long press for key ", key)
      m.longPressKey = key
      toggleLongPressTimer(longPressInterval)
    end if
  else
    result = isCapturingAnyKeyPress(key, press)
  end if

  if result = false and m.vm <> invalid
    result = m.vm.onKeyEvent(key, press)
  end if

  return result
end function

function toggleLongPressTimer(interval)
  if m.longPressTimer <> invalid
    m.longPressTimer.unobserveField("fire")
    m.longPressTimer = invalid
  end if

  if interval > 0
    m.longPressTimer = createObject("roSGNode", "Timer")
    m.longPressTimer.duration = interval
    m.longPressTimer.repeat = true
    m.longPressTimer.observeField("fire", "onLongPressTimerFire")
    m.longPressTimer.control = "start"
  else if m.longPressKey <> ""
    log_logInfo("finishing longPress on key ", key)
    if m.isLongPressStarted
      onLongPressFinish(m.longPressKey)
    end if
    m.longPressKey = ""
    m.isLongPressStarted = false
  end if
end function

function onLongPressTimerFire()
  if m.isLongPressStarted
    if not onLongPressUpdate(m.longPressKey)
      log_logInfo("long press was cancelled by the onLongPressUpdate call")
      toggleLongPressTimer(0)
    end if
  else
    if not onLongPressStart(m.longPressKey)
      log_logInfo("long press was rejected by onLongPressStart call")
      toggleLongPressTimer(0)
    else
      log_logInfo("long press is accepted : starting for key ", m.longPressKey )
      m.isLongPressStarted = true
    end if
  end if
end function

function isAnyKeyPressLocked() as boolean
  if m.isKeyPressLocked
    log_logWarn("All key presses are locked, due to isKeyPressLocked flag on ", m.top.id)
  end if
  return m.isKeyPressLocked
end function

function isCapturingAnyKeyPress(key, press) as boolean
  return false
end function

function onKeyPressDown() as boolean
  return false
end function

function onKeyPressUp() as boolean
  return false
end function

function onKeyPressLeft() as boolean
  return false
end function

function onKeyPressRight() as boolean
  return false
end function

function onKeyPressBack() as boolean
  return false
end function

function onKeyPressOption() as boolean
  return false
end function

function onKeyPressOK() as boolean
  return false
end function

function onKeyPressPlay() as boolean
  return false
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Long press callbacks
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function getLongPressIntervalForKey(key) as float
  return 0
end function

function onLongPressStart(key) as boolean
  return true
end function

function onLongPressUpdate(key) as boolean
  return true
end function

function onLongPressFinish(key) as boolean
  return true
end function
